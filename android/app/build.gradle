plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    // compileSdkVersion flutter.compileSdkVersion
    namespace "com.bividvietnam.bividpharma"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.bividvietnam.bividpharma"
        minSdkVersion flutter.minSdkVersion // flutter.minSdkVersion//21
        targetSdkVersion flutter.targetSdkVersion //30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        ndk {
            // abiFilters "armeabi-v7a", "x86_64", "armeabi", "mips", "x86"
            abiFilters "arm64-v8a", "armeabi-v7a", "x86_64", "armeabi", "mips", "x86" // CH Play
            // abiFilters "arm64-v8a", "armeabi-v7a","armeabi", "mips", "x86"
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            ndk{
                abiFilters "armeabi-v7a", "x86_64", "armeabi", "mips", "x86"
            }
        }
    }
/*
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
*/
}

flutter {
    source '../..'
}

dependencies {
    // This dependency is downloaded from the Googleâ€™s Maven repository.
    // So, make sure you also include that repository in your project's build.gradle file.
    implementation("com.google.android.play:app-update:2.0.1")
    // For Kotlin users also import the Kotlin extensions library for Play In-App Update:
    implementation("com.google.android.play:app-update-ktx:2.0.1")

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    // implementation 'com.google.android.material:material:<version>'


}
